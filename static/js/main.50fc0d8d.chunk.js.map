{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"0NAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,mCACA,yCAMFC,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAMR,OAAO,+BAAQJ,IAcFU,EAXD,SAAAX,GAAU,IACdE,EAAmCF,EAAnCE,cAAeQ,EAAoBV,EAApBU,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,M,OCejDE,E,4MAhDbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGX,IAAD,EACeS,KAAKR,MAAnBP,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,2BAAOe,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eACjB,2BAAOQ,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eACjB,2BACES,KAAK,SACLN,MAAM,SACNT,QAASa,KAAKF,kB,GA3CLO,aCsCJC,E,4MAnCbd,MAAQ,CACNe,WAAY,I,EAGdnB,gBAAkB,SAAAL,GAAU,IAClBwB,EAAe,EAAKf,MAApBe,WAER,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM3B,Q,EAKnBgB,aAAe,SAAAU,GACb,EAAKZ,SAAS,CAAEU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,uDAG/C,IACAF,EAAeP,KAAKR,MAApBe,WAER,OACE,yBAAKI,UAAU,aACb,8CACA,kFACA,kBAAC,EAAD,CACE/B,cAAe2B,EACfnB,gBAAiBY,KAAKZ,kBACxB,uCACA,kBAAC,EAAD,CAAMW,aAAcC,KAAKD,oB,GA9BfM,a,MCClBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.50fc0d8d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n        <th>Remove</th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nconst TableBody = props => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return <tbody>{rows}</tbody>\r\n}\r\n\r\nconst Table = props => {\r\n  const { characterData, removeCharacter } = props\r\n\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Table","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: '',\r\n    job: '',\r\n  }\r\n\r\n  state = this.initialState\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target\r\n  \r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state)\r\n    this.setState(this.initialState)\r\n  }\r\n\r\n  render() {\r\n    const { name, job } = this.state;\r\n  \r\n    return (\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange} />\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange} />\r\n        <input\r\n          type=\"button\"\r\n          value=\"Submit\"\r\n          onClick={this.submitForm} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n  state = {\n    characters: [],\n  }\n\n  removeCharacter = index => {\n    const { characters } = this.state\n  \n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = character => {\n    this.setState({ characters: [...this.state.characters, character] })\n  }\n\n  render() {\n    const { characters } = this.state\n  \n    return (\n      <div className=\"container\">\n        <h1>My First React</h1>\n        <p>Add a character with a name and a job to the table.</p>\n        <Table\n          characterData={characters}\n          removeCharacter={this.removeCharacter} />\n        <h3>Add New</h3>\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}